{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7150/api/Evento';\n  }\n  getEventos() {\n    return this.http.get(this.baseUrl);\n  }\n  getEventosByTema(tema) {\n    return this.http.get(`${this.baseUrl}/${tema}/tema`);\n  }\n  getEventoById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n}\nEventoService.ɵfac = function EventoService_Factory(t) {\n  return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventoService,\n  factory: EventoService.ɵfac\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAG,mCAAmC;EACJ;EAElCC,UAAU;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;EACOC,gBAAgB,CAACC,IAAY;IAClC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,IAAI,OAAO,CAAC;EAChE;EACOC,aAAa,CAACC,EAAW;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,IAAII,EAAE,EAAE,CAAC;EACvD;;;mBAbWT,aAAa;AAAA;;SAAbA,aAAa;EAAAU,SAAbV,aAAa;AAAA","names":["EventoService","constructor","http","getEventos","get","baseUrl","getEventosByTema","tema","getEventoById","id","factory"],"sourceRoot":"","sources":["C:\\Users\\alexsander.da.silva\\Documents\\Projetos\\Udemy\\angularDotNet\\proeventos\\Front\\ProEventos-App\\src\\app\\services\\evento.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Evento } from '../model/Evento';\n\n@Injectable()\nexport class EventoService {\n\n  baseUrl = 'https://localhost:7150/api/Evento';\n  constructor(private http : HttpClient) { }\n\n  public getEventos(): Observable<Evento[]>{\n    return this.http.get<Evento[]>(this.baseUrl);\n  }\n  public getEventosByTema(tema: string): Observable<Evento[]>{\n    return this.http.get<Evento[]>(`${this.baseUrl}/${tema}/tema`);\n  }\n  public getEventoById(id : number): Observable<Evento>{\n    return this.http.get<Evento>(`${this.baseUrl}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}